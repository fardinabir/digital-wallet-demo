{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a digital wallet transactions microservice API.",
        "title": "Digital Wallet Transactions API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "v1.0"
    },
    "host": "localhost:8082",
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a transaction pair (debit and credit)",
                "parameters": [
                    {
                        "description": "Transaction pair request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TransactionPairRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseError"
                        }
                    }
                }
            }
        },
        "/transactions/{subject_wallet_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transactions for a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subject Wallet ID",
                        "name": "subject_wallet_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Transaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "controller.ResponseData": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data is the response data."
                }
            }
        },
        "controller.ResponseError": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "Errors is the response errors.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.Error"
                    }
                }
            }
        },
        "controller.TransactionPairRequest": {
            "type": "object",
            "required": [
                "credit_transaction",
                "debit_transaction"
            ],
            "properties": {
                "credit_transaction": {
                    "$ref": "#/definitions/controller.TransactionRequest"
                },
                "debit_transaction": {
                    "$ref": "#/definitions/controller.TransactionRequest"
                }
            }
        },
        "controller.TransactionRequest": {
            "type": "object",
            "required": [
                "amount",
                "object_wallet_id",
                "operation_type",
                "status",
                "subject_wallet_id",
                "transaction_type"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "object_wallet_id": {
                    "type": "string"
                },
                "operation_type": {
                    "$ref": "#/definitions/model.OperationType"
                },
                "status": {
                    "$ref": "#/definitions/model.TransactionStatus"
                },
                "subject_wallet_id": {
                    "type": "string"
                },
                "transaction_type": {
                    "$ref": "#/definitions/model.TransactionType"
                }
            }
        },
        "model.OperationType": {
            "type": "string",
            "enum": [
                "debit",
                "credit"
            ],
            "x-enum-varnames": [
                "Debit",
                "Credit"
            ]
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount in cents",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "object_wallet_id": {
                    "type": "string"
                },
                "operation_type": {
                    "$ref": "#/definitions/model.OperationType"
                },
                "status": {
                    "$ref": "#/definitions/model.TransactionStatus"
                },
                "subject_wallet_id": {
                    "type": "string"
                },
                "transaction_type": {
                    "$ref": "#/definitions/model.TransactionType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.TransactionStatus": {
            "type": "string",
            "enum": [
                "pending",
                "completed",
                "failed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "Pending",
                "Completed",
                "Failed",
                "Cancelled"
            ]
        },
        "model.TransactionType": {
            "type": "string",
            "enum": [
                "deposit",
                "withdraw",
                "transfer"
            ],
            "x-enum-varnames": [
                "Deposit",
                "Withdraw",
                "Transfer"
            ]
        }
    }
}